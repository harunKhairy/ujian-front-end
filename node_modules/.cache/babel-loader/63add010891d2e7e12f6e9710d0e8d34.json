{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARUN\\\\Documents\\\\GitHub\\\\ujian-front-end\\\\src\\\\pages\\\\manageadmin.jsx\";\nimport React, { Component } from 'react';\nimport { Table, Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport Axios from 'axios';\nimport { API_URL } from '../supports/ApiUrl';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nconst MySwal = withReactContent(Swal);\n\nclass ManageAdmin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      isModaladdOpen: false,\n      isModaleditopen: false,\n      indexedit: 0,\n      indexdelete: -1,\n      categories: []\n    };\n\n    this.toogleadd = () => {\n      this.setState({\n        isModaladdOpen: !this.state.isModaladdOpen\n      });\n    };\n\n    this.toggleedit = () => {\n      this.setState({\n        isModaleditopen: !this.state.isModaleditopen\n      });\n    };\n\n    this.onSaveaddDataClick = () => {\n      var namaadd = this.refs.namaadd.value;\n      var imageadd = this.refs.imageadd.value;\n      var stokeadd = parseInt(this.refs.stokeadd.value);\n      var categoryadd = parseInt(this.refs.categoryadd.value);\n      var hargaadd = parseInt(this.refs.hargaadd.value);\n      var deskripsiadd = this.refs.deskripsiadd.value;\n      var obj = {\n        name: namaadd,\n        image: imageadd,\n        stok: stokeadd,\n        kategoriId: categoryadd,\n        harga: hargaadd,\n        deskripsi: deskripsiadd\n      };\n      Axios.post(`${API_URL}/products`, obj).then(res => {\n        console.log(res.data);\n        Axios.get(`${API_URL}/products?_expand=kategori`).then(resakhir => {\n          this.setState({\n            products: resakhir.data,\n            isModaladdOpen: false\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.deleteconfirm = (index, id) => {\n      MySwal.fire({\n        title: `Are you sure wanna delete ${this.state.products[index].name} ?`,\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(result => {\n        if (result.value) {\n          Axios.delete(`${API_URL}/products/${id}`).then(res => {\n            MySwal.fire('Deleted!', 'Your file has been deleted.', 'success').then(result => {\n              if (result.value) {\n                Axios.get(`${API_URL}/products?_expand=kategori`).then(res1 => {\n                  this.setState({\n                    products: res1.data\n                  });\n                });\n              }\n            });\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      });\n    };\n\n    this.onsaveEditClick = () => {\n      var namaedit = this.refs.namaedit.value;\n      var imageedit = this.refs.imageedit.value;\n      var stokeedit = parseInt(this.refs.stokeedit.value);\n      var categoryedit = parseInt(this.refs.categoryedit.value);\n      var hargaedit = parseInt(this.refs.hargaedit.value);\n      var deskripsiedit = this.refs.deskripsiedit.value;\n      var obj = {\n        name: namaedit,\n        image: imageedit,\n        stok: stokeedit,\n        kategoriId: categoryedit,\n        harga: hargaedit,\n        deskripsi: deskripsiedit\n      };\n      var id = this.state.products[this.state.indexedit].id;\n      console.log(obj, id);\n      Axios.put(`${API_URL}/products/${id}`, obj).then(res => {\n        // console.log(res.data)\n        Axios.get(`${API_URL}/products?_expand=kategori`).then(resakhir => {\n          this.setState({\n            products: resakhir.data,\n            isModaleditopen: false\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    };\n\n    this.onEditClick = index => {\n      this.setState({\n        indexedit: index,\n        isModaleditopen: true\n      });\n    };\n\n    this.renderProducts = () => {\n      const {\n        products\n      } = this.state;\n      return products.map((val, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, val.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: val.image,\n          alt: val.name,\n          width: \"150\",\n          height: \"200px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, val.stok), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, val.kategori.nama), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, val.harga), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, val.deskripsi), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => this.onEditClick(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => this.deleteconfirm(index, val.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Delete\")));\n      });\n    };\n\n    this.rendercategprytoadd = () => {\n      return this.state.categories.map((val, index) => {\n        return React.createElement(\"option\", {\n          key: index,\n          value: val.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, val.nama);\n      });\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(`${API_URL}/products?_expand=kategori`).then(res => {\n      Axios.get(`${API_URL}/kategoris`).then(kategoris => {\n        this.setState({\n          products: res.data,\n          categories: kategoris.data\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const {\n      indexedit,\n      products\n    } = this.state;\n\n    if (this.props.User.role === 'admin') {\n      return React.createElement(\"div\", {\n        className: \"pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.isModaladdOpen,\n        toggle: this.toogleadd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toogleadd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Add data\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"namaadd\",\n        placeholder: \"Product name\",\n        className: \"form-control mt-2 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"imageadd\",\n        placeholder: \"Url Image\",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        ref: \"stokeadd\",\n        placeholder: \"jumlah stok\",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        ref: \"categoryadd\",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Pilih category\"), this.rendercategprytoadd()), React.createElement(\"input\", {\n        type: \"number\",\n        ref: \"hargaadd\",\n        placeholder: \"Harga \",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        cols: \"20\",\n        rows: \"5\",\n        ref: \"deskripsiadd\",\n        className: \"form-control mt-2\",\n        placeholder: \"deskripsi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.onSaveaddDataClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toogleadd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Cancel\"))), this.state.products.length ? React.createElement(Modal, {\n        isOpen: this.state.isModaleditopen,\n        toggle: this.toggleedit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleedit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"edit data \", products[indexedit].name), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"namaedit\",\n        defaultValue: products[indexedit].name,\n        placeholder: \"Product name\",\n        className: \"form-control mt-2 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"imageedit\",\n        defaultValue: products[indexedit].image,\n        placeholder: \"Url Image\",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        ref: \"stokeedit\",\n        defaultValue: products[indexedit].stok,\n        placeholder: \"jumlah stok\",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        ref: \"categoryedit\",\n        defaultValue: products[indexedit].kategoriId,\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Pilih category\"), this.rendercategprytoadd()), React.createElement(\"input\", {\n        type: \"number\",\n        defaultValue: products[indexedit].harga,\n        ref: \"hargaedit\",\n        placeholder: \"Harga \",\n        className: \"form-control mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        cols: \"20\",\n        rows: \"5\",\n        defaultValue: products[indexedit].deskripsi,\n        ref: \"deskripsiedit\",\n        className: \"form-control mt-2\",\n        placeholder: \"deskripsi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.onsaveEditClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleedit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Cancel\"))) : null, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.toogleadd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Add data\"), React.createElement(Table, {\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"No\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"image\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"stok\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Harga\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Deskripsi\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.renderProducts())));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/notfound\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst MapstatetoProps = state => {\n  return {\n    User: state.Auth\n  };\n};\n\nexport default connect(MapstatetoProps)(ManageAdmin);","map":{"version":3,"sources":["C:/Users/HARUN/Documents/GitHub/ujian-front-end/src/pages/manageadmin.jsx"],"names":["React","Component","Table","Modal","ModalBody","ModalFooter","ModalHeader","Button","Axios","API_URL","Swal","withReactContent","connect","Redirect","MySwal","ManageAdmin","state","products","isModaladdOpen","isModaleditopen","indexedit","indexdelete","categories","toogleadd","setState","toggleedit","onSaveaddDataClick","namaadd","refs","value","imageadd","stokeadd","parseInt","categoryadd","hargaadd","deskripsiadd","obj","name","image","stok","kategoriId","harga","deskripsi","post","then","res","console","log","data","get","resakhir","catch","err","deleteconfirm","index","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","delete","res1","onsaveEditClick","namaedit","imageedit","stokeedit","categoryedit","hargaedit","deskripsiedit","put","onEditClick","renderProducts","map","val","kategori","nama","rendercategprytoadd","componentDidMount","kategoris","render","props","User","role","length","MapstatetoProps","Auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table,Modal,ModalBody,ModalFooter,ModalHeader,Button } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport { API_URL } from '../supports/ApiUrl';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nclass ManageAdmin extends Component {\r\n    state = {\r\n        products:[],\r\n        isModaladdOpen:false,\r\n        isModaleditopen:false,\r\n        indexedit:0,\r\n        indexdelete:-1,\r\n        categories:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(`${API_URL}/products?_expand=kategori`)\r\n        .then((res)=>{\r\n            Axios.get(`${API_URL}/kategoris`)\r\n            .then((kategoris)=>{\r\n                this.setState({products:res.data,categories:kategoris.data})\r\n            })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    toogleadd=()=>{\r\n        this.setState({isModaladdOpen:!this.state.isModaladdOpen})\r\n    }\r\n\r\n    toggleedit=()=>{\r\n        this.setState({isModaleditopen:!this.state.isModaleditopen})\r\n    }\r\n\r\n    onSaveaddDataClick=()=>{\r\n        var namaadd=this.refs.namaadd.value\r\n        var imageadd=this.refs.imageadd.value\r\n        var stokeadd=parseInt(this.refs.stokeadd.value)\r\n        var categoryadd=parseInt(this.refs.categoryadd.value)\r\n        var hargaadd=parseInt(this.refs.hargaadd.value)\r\n        var deskripsiadd=this.refs.deskripsiadd.value\r\n        var obj={\r\n            name:namaadd,\r\n            image:imageadd,\r\n            stok:stokeadd,\r\n            kategoriId:categoryadd,\r\n            harga:hargaadd,\r\n            deskripsi:deskripsiadd\r\n        }\r\n        Axios.post(`${API_URL}/products`,obj)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            Axios.get(`${API_URL}/products?_expand=kategori`)\r\n            .then((resakhir)=>{\r\n                this.setState({products:resakhir.data,isModaladdOpen:false})\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    deleteconfirm=(index,id)=>{\r\n        MySwal.fire({\r\n            title: `Are you sure wanna delete ${this.state.products[index].name} ?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              Axios.delete(`${API_URL}/products/${id}`)\r\n              .then((res)=>{\r\n                  MySwal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                  ).then((result)=>{\r\n                      if(result.value){\r\n                          Axios.get(`${API_URL}/products?_expand=kategori`)\r\n                          .then((res1)=>{\r\n                            this.setState({products:res1.data})\r\n                          })\r\n                      }\r\n                  })\r\n              }).catch((err)=>{\r\n                  console.log(err)\r\n              }) \r\n            }\r\n          })\r\n    }\r\n    onsaveEditClick=()=>{\r\n        var namaedit=this.refs.namaedit.value\r\n        var imageedit=this.refs.imageedit.value\r\n        var stokeedit=parseInt(this.refs.stokeedit.value)\r\n        var categoryedit=parseInt(this.refs.categoryedit.value)\r\n        var hargaedit=parseInt(this.refs.hargaedit.value)\r\n        var deskripsiedit=this.refs.deskripsiedit.value\r\n        var obj={\r\n            name:namaedit,\r\n            image:imageedit,\r\n            stok:stokeedit,\r\n            kategoriId:categoryedit,\r\n            harga:hargaedit,\r\n            deskripsi:deskripsiedit\r\n        }\r\n        var id=this.state.products[this.state.indexedit].id\r\n        console.log(obj,id)\r\n        Axios.put(`${API_URL}/products/${id}`,obj)\r\n        .then((res)=>{\r\n            // console.log(res.data)\r\n            Axios.get(`${API_URL}/products?_expand=kategori`)\r\n            .then((resakhir)=>{\r\n                this.setState({products:resakhir.data,isModaleditopen:false})\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n        })\r\n\r\n    }\r\n    onEditClick=(index)=>{\r\n        this.setState({indexedit:index,isModaleditopen:true})\r\n    }\r\n    renderProducts=()=>{\r\n        const {products} =this.state \r\n        return products.map((val,index)=>{\r\n            return (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{index+1}</th>\r\n                    <td>{val.name}</td>\r\n                    <td><img src={val.image} alt={val.name} width='150' height='200px'/></td>\r\n                    <td>{val.stok}</td>\r\n                    <td>{val.kategori.nama}</td>\r\n                    <td>{val.harga}</td>\r\n                    <td>{val.deskripsi}</td>\r\n                    <td>\r\n                        <button className='btn btn-primary' onClick={()=>this.onEditClick(index)} >Edit</button>\r\n                        <button className='btn btn-danger' onClick={()=>this.deleteconfirm(index,val.id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    rendercategprytoadd=()=>{\r\n        return this.state.categories.map((val,index)=>{\r\n            return <option key={index} value={val.id}>{val.nama}</option>\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {indexedit,products}=this.state \r\n        if(this.props.User.role==='admin'){\r\n            return ( \r\n                <div className='pt-5'>\r\n                    <Modal isOpen={this.state.isModaladdOpen} toggle={this.toogleadd}>\r\n                        <ModalHeader toggle={this.toogleadd}>Add data</ModalHeader>\r\n                        <ModalBody>\r\n                            <input type=\"text\" ref='namaadd' placeholder='Product name' className='form-control mt-2 '/>\r\n                            <input type=\"text\" ref='imageadd' placeholder='Url Image' className='form-control mt-2'/>\r\n                            <input type=\"number\" ref='stokeadd' placeholder='jumlah stok' className='form-control mt-2'/>\r\n                            <select ref='categoryadd' className='form-control mt-2'>\r\n                                <option value=\"\" hidden>Pilih category</option>\r\n                                {this.rendercategprytoadd()}\r\n                            </select>\r\n                            <input type=\"number\" ref='hargaadd' placeholder='Harga ' className='form-control mt-2'/>\r\n                            <textarea cols=\"20\" rows=\"5\" ref='deskripsiadd' className='form-control mt-2' placeholder='deskripsi' ></textarea>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.onSaveaddDataClick}>Save</Button>\r\n                            <Button color=\"secondary\" onClick={this.toogleadd}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    {\r\n                    this.state.products.length?\r\n                    <Modal isOpen={this.state.isModaleditopen} toggle={this.toggleedit}>\r\n                        <ModalHeader toggle={this.toggleedit}>edit data {products[indexedit].name}</ModalHeader>\r\n                        <ModalBody>\r\n                            <input type=\"text\" ref='namaedit' defaultValue={products[indexedit].name} placeholder='Product name' className='form-control mt-2 '/>\r\n                            <input type=\"text\" ref='imageedit' defaultValue={products[indexedit].image} placeholder='Url Image' className='form-control mt-2'/>\r\n                            <input type=\"number\" ref='stokeedit' defaultValue={products[indexedit].stok} placeholder='jumlah stok' className='form-control mt-2'/>\r\n                            <select ref='categoryedit' defaultValue={products[indexedit].kategoriId} className='form-control mt-2'>\r\n                                <option value=\"\" hidden>Pilih category</option>\r\n                                {this.rendercategprytoadd()}\r\n                            </select>\r\n                            <input type=\"number\" defaultValue={products[indexedit].harga} ref='hargaedit' placeholder='Harga ' className='form-control mt-2'/>\r\n                            <textarea cols=\"20\" rows=\"5\" defaultValue={products[indexedit].deskripsi} ref='deskripsiedit' className='form-control mt-2' placeholder='deskripsi' ></textarea>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.onsaveEditClick}>Save</Button>\r\n                            <Button color=\"secondary\" onClick={this.toggleedit}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n                    }\r\n                    <button className='btn btn-primary' onClick={this.toogleadd}>Add data</button>\r\n                    <Table striped>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>image</th>\r\n                                <th>stok</th>\r\n                                <th>Category</th>\r\n                                <th>Harga</th>\r\n                                <th>Deskripsi</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.renderProducts()}\r\n                        </tbody>\r\n                    </Table>\r\n    \r\n                </div>\r\n             );\r\n        }else{\r\n            return <Redirect to='/notfound'/>\r\n        }\r\n    }\r\n}\r\nconst MapstatetoProps=(state)=>{\r\n    return{\r\n        User:state.Auth\r\n    }\r\n}\r\nexport default connect(MapstatetoProps)(ManageAdmin);"]},"metadata":{},"sourceType":"module"}