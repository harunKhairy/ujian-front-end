{"ast":null,"code":"import Axios from 'axios';\nimport { USER_LOGIN_START, USER_LOGIN_FAILED, USER_LOGIN_SUCCESS } from './type';\nimport { API_URL } from '../../supports/ApiUrl';\nexport const LoginUser = ({\n  username,\n  password\n}) => {\n  return dispatch => {\n    dispatch({\n      type: USER_LOGIN_START\n    });\n\n    if (username === '' || password === '') {\n      //kalo ada input yang kosong\n      dispatch({\n        type: USER_LOGIN_FAILED,\n        payload: 'username atau password tidak terisi'\n      });\n    } else {\n      Axios.get(`${API_URL}/users`, {\n        params: {\n          username: username,\n          password: password\n        }\n      }).then(res => {\n        if (res.data.length) {\n          //user ada\n          localStorage.setItem('iduser', res.data[0].id);\n          dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: res.data[0]\n          });\n        } else {\n          dispatch({\n            type: USER_LOGIN_FAILED,\n            payload: 'username atau password tidak terdaftar'\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        dispatch({\n          type: USER_LOGIN_FAILED,\n          payload: err.message\n        });\n      });\n    }\n  };\n};\nexport const errormessageclear = () => {\n  return {\n    type: 'ErrorClear'\n  };\n};\nexport const KeepLogin = data => {\n  return {\n    type: USER_LOGIN_SUCCESS,\n    payload: data\n  };\n};\nexport const userChangePassword = passwordbaru => {\n  return {\n    type: \"GANTI_PASSWORD\",\n    payload: passwordbaru\n  };\n};","map":{"version":3,"sources":["C:/Users/HARUN/Documents/GitHub/ujian-front-end/src/redux/actions/AuthActions.jsx"],"names":["Axios","USER_LOGIN_START","USER_LOGIN_FAILED","USER_LOGIN_SUCCESS","API_URL","LoginUser","username","password","dispatch","type","payload","get","params","then","res","data","length","localStorage","setItem","id","catch","err","console","log","message","errormessageclear","KeepLogin","userChangePassword","passwordbaru"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,kBAA9C,QAAwE,QAAxE;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAGA,OAAO,MAAMC,SAAS,GAAC,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AAC1C,SAAQC,QAAD,IAAY;AACfA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACR;AAAN,KAAD,CAAR;;AACA,QAAGK,QAAQ,KAAG,EAAX,IAAeC,QAAQ,KAAG,EAA7B,EAAgC;AAAC;AAC7BC,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACP,iBAAN;AAAwBQ,QAAAA,OAAO,EAAC;AAAhC,OAAD,CAAR;AACH,KAFD,MAEK;AACDV,MAAAA,KAAK,CAACW,GAAN,CAAW,GAAEP,OAAQ,QAArB,EAA6B;AACzBQ,QAAAA,MAAM,EAAC;AACHN,UAAAA,QAAQ,EAACA,QADN;AAEHC,UAAAA,QAAQ,EAACA;AAFN;AADkB,OAA7B,EAMCM,IAND,CAMOC,GAAD,IAAO;AACT,YAAGA,GAAG,CAACC,IAAJ,CAASC,MAAZ,EAAmB;AAAC;AAChBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BJ,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYI,EAA1C;AACAX,UAAAA,QAAQ,CAAC;AAACC,YAAAA,IAAI,EAACN,kBAAN;AAAyBO,YAAAA,OAAO,EAACI,GAAG,CAACC,IAAJ,CAAS,CAAT;AAAjC,WAAD,CAAR;AACH,SAHD,MAGK;AACDP,UAAAA,QAAQ,CAAC;AAACC,YAAAA,IAAI,EAAEP,iBAAP;AAAyBQ,YAAAA,OAAO,EAAC;AAAjC,WAAD,CAAR;AACH;AACJ,OAbD,EAaGU,KAbH,CAaUC,GAAD,IAAO;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAACP,iBAAN;AAAwBQ,UAAAA,OAAO,EAACW,GAAG,CAACG;AAApC,SAAD,CAAR;AACH,OAhBD;AAiBH;AACJ,GAvBD;AAwBH,CAzBM;AA2BP,OAAO,MAAMC,iBAAiB,GAAC,MAAI;AAC/B,SAAM;AACFhB,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH,CAJM;AAKP,OAAO,MAAMiB,SAAS,GAAEX,IAAD,IAAQ;AAC3B,SAAM;AACFN,IAAAA,IAAI,EAACN,kBADH;AAEFO,IAAAA,OAAO,EAACK;AAFN,GAAN;AAIH,CALM;AAOP,OAAO,MAAMY,kBAAkB,GAAIC,YAAD,IAAkB;AAChD,SAAO;AACHnB,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAEkB;AAFN,GAAP;AAIH,CALM","sourcesContent":["import Axios from 'axios'\r\nimport { USER_LOGIN_START, USER_LOGIN_FAILED, USER_LOGIN_SUCCESS } from './type'\r\nimport { API_URL } from '../../supports/ApiUrl'\r\n\r\n\r\nexport const LoginUser=({username,password})=>{\r\n    return (dispatch)=>{\r\n        dispatch({type:USER_LOGIN_START})\r\n        if(username===''||password===''){//kalo ada input yang kosong\r\n            dispatch({type:USER_LOGIN_FAILED,payload:'username atau password tidak terisi'})\r\n        }else{\r\n            Axios.get(`${API_URL}/users`,{\r\n                params:{\r\n                    username:username,\r\n                    password:password\r\n                }\r\n            })\r\n            .then((res)=>{\r\n                if(res.data.length){//user ada\r\n                    localStorage.setItem('iduser',res.data[0].id)\r\n                    dispatch({type:USER_LOGIN_SUCCESS,payload:res.data[0]})\r\n                }else{\r\n                    dispatch({type: USER_LOGIN_FAILED,payload:'username atau password tidak terdaftar'})\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n                dispatch({type:USER_LOGIN_FAILED,payload:err.message})\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const errormessageclear=()=>{\r\n    return{\r\n        type:'ErrorClear'\r\n    }\r\n}\r\nexport const KeepLogin=(data)=>{\r\n    return{\r\n        type:USER_LOGIN_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nexport const userChangePassword = (passwordbaru) => {\r\n    return {\r\n        type: \"GANTI_PASSWORD\",\r\n        payload: passwordbaru\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}